Στο κεφάλαιο 2 θα δούμε πώς μπορούμε να κάνουμε έλεγχο προγράμματος. Έχουμε δεί μέχρι στιγμής οτι οι εντολές εκτελούνται με την σειρά απο πάνω προς τα κάτω.Όμως 
πολλές φορές για να εκτελεσθούν κάποιες εντολές θα πρέπει να ισχύουν κάποιες συνθήκες. Αυτές οι εντολές είναι η  if και η switch οι οποίες ελέχνουν αυτές τις συνθήκες.
  
2.1 Η Εντολή  if
Η εντολή if ελέχει αν μια συνθήκη είναι αληθής ή ψευδής. Ανάλογα με το αποτέλεσμα της συνθήκης εκτελεί επιλεκτικά κάποιο κομμάτι κώδικα. 
Η σύνταξη της, στην πιο απλή της μορφή είναι:
if (συνθήκη) 
{
	εντολές
}
Αν η συνθήκη είναι αληθής τότε εκτελούνται οι εντολές μεσα στα άγκριστρα αλλιως δεν εκτελούνται.
Π.χ. int i = 2;
     if (i != 1) 
     { 
	printf("i is not one!\n");
     }
Εφόσον το i δεν είναι ίσο με το 1 σημαίνει οτι η συνθήκη είναι αληθής και εκτελούνται κανονικά οι εντολές ανάμεσα στα άγκιστρα.
Εάν το  i  ήταν ίσο με 1 τότε η συνθήκη θα ήταν ψευδής και δεν θα εκτελούνταν οι εντολές ανάμεσα στα άγκιστρα και ο κώδικας δεν θα εμφανίσει κάτι.

Σημείωση 1: Έκφραση if(i) ισοδυναμεί με την if(i != 0) και η έκφραση if(!i) ισοδυναμεί με την if(i == 0)
Σημείωση 2: Παρατηρούμε ότι στο τέλος την εντολής if δεν βάζουμε ερωτηματικό ";" διότι είναι μια ξεχωριστή εντολή ποι δεν κάνει 
τίποτα και ο μεταγλωττιστής τερματίζει την εκτέλεση της if.

2.2 Η Εντολή if-else
Η εντολή if πολλές φορές συνεχίζεται απο την εντολή else:
if ( συνθήκη) 
{
	εντολές Α
}
else
{
	εντολές Β
}
Οπότε εάν η συνθήκη είναι αληθής εκτελούνται οι εντολές Α, αλλίως αν είναι ψευδής εκτελούνται οι εντολές Β.
Π.χ.
int i = -1;
if(i > 0) 
{
	printf("i is positive!\n);
}
else
{
	printf("i is negative!\n);
}
Στην έξοδο θα εμφανισθεί το μήνυμα "i is negative" διότι i<0.

2.3 Ο Τελεστής ?:
Ο τελεστής ?: επιτρέπει την εκτέλεση της μιας απο δύο ενέργειες ανάλογα με το αποτέλεσμα/τιμή μιας έκφρασης/συνθήκης. Η σύνταξη του είναι η εξής:
expression1 ? expression2 : expression3;
Οπότε αν η expression1 είναι αληθής εκτελείται η expression2 αλλιώς expression3.
Π.χ. 
if (x < y)
	min = x;
else
	min = y;
η παραπάνω εντολές ισοδυναμούν με αυτές τις εντολές: 
min = (x < y) ? x : y;   

2.4 Η Εντολή switch
Η εντολή switch  πρόκειται για μια εντολή που μπορεί να χρησιμοποιηθεί έναντι της if-else-if δομής, αν θέλουμε να ελέγξουμε μια έκφραση για όλες τις πιθανές τιμές
που μπορεί να πάρει και να διαχειριστούμε την κάθε περίπτωση διαφορετικά. Η σύνταξη της είναι η εξής:

switch (έκφραση) 
{
	  case σταθερά_1:
		/*εντολές που θα εκτελεσθoύν αν η τιμή της έκφρασης είναι ίση με την σταθερά_1. */
	  break;

	  case σταθερά_2:
		/*εντολές που θα εκτελεσθoύν αν η τιμή της έκφρασης είναι ίση με την σταθερά_2. */
	  break;

	  case σταθερά_n:
		/*εντολές που θα εκτελεσθoύν αν η τιμή της έκφρασης είναι ίση με την σταθερά_n. */
	  break;

	  default:
		/* εντολές που θα εκτελεσθoύν αν η τιμή της έκφρασης δεν είναι ίση με καμία απο τις προηγούμενες σταθερές. */
	  break;
}

Σημείωση 3: Η έκφραση που θα ελεγχτεί πρέπει να είναι ακέραια μεταβλητή ή έκφραση. Οι σταθερές πρέπει να είναι ακέραιες σταθερές με
διαφορετικές τιμές μεταξύ τους.
Σημείωση 4: Η εντολή switch ελέγχει μόνο για ισότητα. Δηλαδή για τις τιμές της έκφραση που είναι ίσες με τις σταθερές case.

Πότε χρησιμοποιούμε την switch? 
Όταν ένα πρόγραμμα μπορεί να πάρει αρκετές δυνατές διαδρομές συνήθως η χρήση της switch το κάνει πιο ευανάγνωστο.
Π.χ.
#include <stdio.h>
int main() 
{
    int i;
    printf("Enter number: ");
    scanf("%d", &i);

    switch (i)
    {
	case 1:
	      printf("One\n");
	break;

	case 2:
	      printf("Two\n");
	break;

	default:
	      printf("Something else!\n");
	break;
    }
    printf("End!\n");
    return 0;
}

Σημείωση 5: Η εντολή break τερματίζει άμεσα την εκτέλεση του βρόχου.


quiz

(1)H έκφραση if(z) είναι ισοδύναμη με την if(z != 0)
Α. Σωστό ~
Β. Λαθος
Γ. Μη έγκυρη έκφραση
Δ. Τίποτα απο τα δύο

(2) H έκφραση if(!z) δεν είναι ισοδύναμη με την if(z == 0)
Α. Σωστό
Β. Λάθος ~
Γ. Μη έγκυρη έκφραση 
Δ. Τίποτα απο τα παραπάνω 

(3) Ποιά είναι η έξοδος του προγράμματος;
#inlcude <stdio.h>
int main() {
	int i = 0;
	if (i = 0) {
		printf("i equals to zero!\n");
	}
	return 0;
}

Α. i = 0 
Β. 0 equals to zero
Γ. i equals to zero
Δ. το πρόγραμμα δεν θα εμφανίσει τίποτα ~

(4) Ποιά είναι η έξοδος του παρακάτω προγράμματος;

#include <stdio.h>
int main() {
	int x = 0;
	if (x = 0) {
		printf("x equals to zero\n");
	}
	else {
		printf("x  EQUALS TO ZERO\n");
	}
	return 0;
}
    
Α. x equals to zero
Β. 0 equals to zero
Γ. x EQUALS TO ZERO ~
Δ. το πρόγραμμα δεν θα εμφανίσει τίποτα

	  
(5) Ποιά θα είναι η συνθήκη στην  if εαν θέλουμε να εμφανίσουμε την απόλυτη τιμή ενός ακέραιου αριθμού;
#include <stdio.h>
int main() {
	int number;
	printf("Enter number: ");
	scanf("%d", &number);
	
	if(....... ) {
		printf("The absolute value is %d\n", number);
	}
	else {
		printf("The absolute value is %d\n", -number);
	}

	return 0;
}

Α. number >= 0 ~
Β. number <= 0
Γ. number == 0
Δ. number != 0


(6) Ποιά είναι η έξοδος του παρακάτω προγράμματος;
#include <stdio.h>
int main() {
	int x = 1, y = 2;
	if (x && x/y) {
		printf("Yes\n"); 
	}
	else {
		printf("No\n"); 
	}
	return 0;
}

Α. Yes
Β. Yes
   No
Γ. Το πρόγραμμα δεν θα εμφανίσει τίποτα γιατί είναι λάθος η συνθήκη.
Δ. No ~

(7) Ποιά είναι η έξοδος του παρακάτω προγράμματος;
#include <stdio.h>
int main() {
	float i = 1.2;

	if(i == 1.2) {
		printf("Yes\n");
	}
	else {
		printf("No\n");	

	return 0;
}

Α. Yes
Β. No ~
Γ. Τίποτα γιατί η συνθήκη είναι λάθος.
Δ. Τίποτα απο τα παραπάνω.


(8) Ποια είναι η έξοδος του προγράμματος;
#include <stdio.h>
int main() {
	int x, y;
	x = y = 19;
	if(++x == y++) {
		printf("One\n");
	}
	else {
		printf("Two\n");
	}
	printf("%d %d\n", x, y);	
	return 0;
}

Α. One 
   20 20
Β. Two
   19 20
Γ. Two
   20 19
Δ. Two ~
   20 20


(9) Ποιά είναι η έξοδος του προγράμματος;
#include <stdio.h>
int main() {
	int x = 2, y = 5, z = 3;
	if (x < y < z) {
		printf("One\n");
	}
	else {
		printf("Two\n");
	}
	return 0;
}

Α. Two 
Β. One ~
Γ. Τίποτα απο τα δυο.
Δ. Η συνθήκη είναι λάθος το πρόγραμμα δεν εμφανίζει τίποτα.

(10) Ποιά είναι η έξοδος του παραπάνω προγράμματος αν το number είναι 12;
#include <stdio.h>
int main() {
	int x;
	printf("Enter number: ");
	scanf("%d, &number");
	(x > 10) ? printf("One\n"); : printf("Two\n");	

	return 0;
}

Α. x > 10
Β. Two 
Γ. One ~
Δ. τίποτα απο τα παραπάνω

(11) Ποιά είναι η έξοδος του παρακάτω προγράμματος;
#include <stdio.h>
int main() {
	int i = 1;
	switch(i) {
		case 1:
			printf("One\n");
		return 0;
		case 2:
			printf("Two\n");
		break;		}
	}
	printf("End\n");
	return 0;
}
 
Α. One
   End
Β. One End
Γ. Two 
   End
Δ. One ~


