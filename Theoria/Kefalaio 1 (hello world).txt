1.1 Το Πρώτο Πρόγραμμα
int main() {
	printf("Hello World!\n");
	return 0;
}
Για να αναπτύξουμε ένα πρόγραμμα σε c ξεκινάμε γράφοντας την εντολή #include ακολουθούμενη απο ένα όνομα αρχείου. 
Έτσι ο μεταγλώττιστής συμπεριλαμβάνει τα περιεχόμενα του αρχείου στον κώδικα.
Ένα απο τα αρχεία αυτά είναι το stdio.h το οποίο περιλαμβάνει πληροφορίες για τις συναρτήσεις βιβλιοθήκης.Στην συγκεκριμένη
περίπτωση περιέχει δηλώσεις συναρτήσεων για ανάγνωση και εκτύπωση δεδομένων. Η κατάληξη  .h  σημαίνει οτι είναι αρχεία επικεφαλίδας (header files).
(Ο προγραμματιστής μπορεί να δημιουργήσει μια δικιά του βιβλιοθήκη και να την συμπεριλάβει στο πρόγραμμα με την εντολή #include).
Το όνομα αρχείου το βάζουμε μέσα σε < > ή " ". Στην πρώτη περίπτωση ο μεταγλωττιστής ψάχνει σε προεπιλεγμένους φακέλους 
ενό στην δεύτερη περίπτωση πρώτα ψάχνει στον φάκελο που βρίσκεται το πρόγραμμα και μετα σε προεπιλεγμένους φακέλους.
Πάντα σε όλα τα προγράμματα σε C υπάρχει η συνάρτηση main() και όλες οι εντολές του προγράμματος γράφονται μέσα σε άγκιστρα {}.
Το πρόγραμμα ξεκινάει την εκτέλεση με την πρώτη της εντολή και τερματίζει με την τελευταία της με κάποιες εξαιρέσεις που θα δούμε αργότερα.
Η συνάρτηση printf() χρησιμποιείται για τη εμφάνιση δεδομένων στην οθόνη. Ο χαρακτήρας \n χρησιμοποιείται αν θέλουμε να αλλάξουμε γραμμή 
στα δεδομένα που θα εμφανισθούν στην οθόνη. 

1.2 Δήλωση μεταβλητών
Μεταβλητή είναι μια θέση μνήμης και έχει ένα συγκεκριμένο όνομα και ένα περιεχόμενο(μια τιμή). Η τιμή της μεταβλητής κατα την διάρκεια εκτέλεσης 
του προγράμματος μπορει να χρησιμοποιηθεί και να αλλάξει.

(ονομα μεταβλητων)
Το όνομα μιας μεταβλητής έχει κάποιους κανόνες.
1. Μπορει να αποτελείται απο μικρά και κεφαλαία γράμματα του λατινικού αλφαβήτου, ψηφία και ο χαρακτήρας '_' επίσης.
2. Ο πρώτος χαρακτήρας του ονόματος θα μπορεί να είναι γράμμα η ο χαρακτήρας '_'. 
3. Η γλώσσα C είναι μια case sensitive γλώσσα, δηλαδή οι μεταβλητές με τα ονόματα Max και max είναι διαφορετικές.
4. Η γλώσσα C έχει κάποιες δεσμευμένες λέξεις που χρησιμοποιούνται για συγκεκριμένους σκοπούς και δεν μπορουν να χρησιμοποιηθούν ως ονόματα μεταβλητών.
(φωτογραφία απο τις δεσμευμένες λέξεις)

1.3 Τύπος Δεδομένων
Για να μπορέσουμε να χρησιμοποιήσουμε μια μεταβλητή σε ένα πρόγραμμα πρέπει πρώτα να την έχουμε δηλώσει. Η δήλωση της γίνεται ως εξής:
'τύπος_δεδομένων ονομα_μεταβλητης;'
Οι τύποι δεδομένων είναι:
char αντιστοιχεί στην δήλωση χαρακτήρων θετικών ή αρνητικών.
short αντιστοιχεί στην δήλωση ακεραίων αριθμών θετικών ή αρνητικών.
int αντιστοιχει στην δήλωση ακεραίων αριθμών θετικών ή αρνητικών.
long αντιστοιχεί στην δήλωση ακεραίων αριθμών θετικών ή αρνητικών.
float αντιστοιχεί στην δήλωση πραγματικών αριθμών θετικών ή αρνητικών. 
double αντιστοιχεί στην δήλωση πραγματικών αριθμών μεγαλύτερης ακρίβειας θετικών η αρνητικών.
'Αν μπροστά απο τον τύπο δεδομένων έχει την δεσμευμένη λέξη unsigned τότε η μεταβλητή γίνεται απρόσιμη και παίρνει μόνο θετικές τιμές.

1.4 Εκχώρηση Τιμής σε Μεταβλητή
Μια εκχώριση τιμής σε μία μεταβλητή μπορεί να γίνει κατα την διάρκεια της δήλωσης της ή αργότερα και γίνεται με τον τελεστή '='.
Π.χ. int x = 10;   ή 
int x;
x = 10;
Μπορούμε να δηλώσουμε στην ίδια σειρά μεταβλητές του ίδιου τύπου αλλα και να εκχωρίσουμε τιμές σε αυτές τις μεαβλητές.
Π.χ. int a, b, c;  ή
int a = 10, b = 32, c = 1;

Η σταθερά const χρησιμοποιείται για να ορισθέι μία μεταβλητη της οποίας η τιμή δεν αλλάζει κατα την διάρκεια εκτέλεσης του προγράμματος. Πρέπει με την δήλωση της να 
γίνει και εκχώρηση μιας τιμής.
Π.χ. const float grade = 19.78

1.5 Ακολουθίες διαφυγής
\a το χρησιμοποιούμε για την δημιουργία ηχητικού κύματος.
\b το χρησιμοποιούμε για να διαγράψουμε το τελευταίο στοιχείο. 
\n το χρησιμποιούμε όταν θέλουμε να αλλάξουμε γραμμή.
\r το χρησιμοποιούμε για την επαναγορά του κέρσορα στην αρχή της γραμμής που βρισκόμαστε.
\t το χρησιμοποιούμε για να μετακινήσουμε τον κέρσορα σε απόσταση ίση με το πλήκτρο tab.
\\ το χρησιμοποιούμε για να εμφανίσουμε το \
\" το χρησιμοποιούμε για να εμφανίσουμε το "

1.6 Προσδιοριστικό Μετατροπής
ο χαρακτήρας % ακολουθούμενος απο εναν αλλο χαρακτήρα έχει ειδική σημασία. Για παράδειγμα:
%d χρησιμοποιείται για να εμφανίσει έναν ακέραιο.
%f χρησιμοποιείται για να εμφανίσει έναν πραγματικό.
%s χρησιμοποιείται για να εμφανίσει εναν  χαρακτήρα.
Αν θέλουμε λοιπόν να εμφανίσουμε στην οθόνη μία πράξη θα γράψουμε το εξής:
#include <stdio.h>
int main() {
	int x = 5, y = 10;
	printf("%d + %d = %d\n", x, y, x+y);
	printf("%f\n", x);
	return 0;
}
Η πρώτη printf του παραπάνω προγράμματος θα εμφανίσει στην οθόνη 
5 + 10 = 15
Η δεύτερη  printf θα εμφανίσει εναν τυχαίο αριθμό αφου το προσδιοριστικό μετατροπής που χρησιμοποιείται είναι για πραγματικούς αριθμούς και όχι για ακέραιους.

1.7 Ακρίβεια
Όσον αφορά τις τιμές μεταβλητών τύπου float και double εξ΄ ορισμού η ακρίβεια είναι τα 6 δεκαδικά ψηφία, όμως αν θέλουμε περισσότερη ακρίβεια προσθέτουμε μια τελεία
και τον αριθμό των ψηφίων που θέλουμε να εμφανισθούν ή τον χαρακτήρα '*' και δίπα έναν ακέραιο που να υποδηλώνει τον αριθμό των επιθυμητών δεκαδικών ψηφίων.

1.8 Η Συνάρτηση scanf
Πολλές φορές το το πρόγραμμα ζητάει απο τον χρήστη να εισάγει κάποια δεδομένα απο το πληκτρολόγιο. Για να αποθηκεύσουμε αυτα τα δεδομένα σε μεταβλητες 
χρησιμοποιούμε την συναρτηση scanf.
Π.χ.  scanf("%d", &x);
οταν ο χρήστης εισάγει εναν ακέραιο τον αποθηκέυει στην μεταβλητή x. 
Για πραγματικό αριθμό float θα ήταν '%f' και για double 'lf'.

1.9 Τελεστές
Για την εκτέλεση γνωστών αριθμητικών πράξεων χρησιμοποιούνται οι αριθμητικοί τελεστές +, -, /, *.
Στην διαίρεση, αν και οι δύο αριθμοί είναι ακέραιοι το δεκαδικό τμήμα του αποτελέσματος δεν θα εμφανισθεί.
Ο τελεστής % χρησιμοποιείται μόνο για ακέραιους αριθμούς και εκφράζει το αποτέλεσμα της διαίρεσης. 
Οι Τελεστές ++ και -- χρησιμοποιούνται για αύξηση και μείωση μιας τιμής κατα ένα.
Προσοχη! Αν η εντολή ειναι x = i++; πρώτα αποθηκεύεται η τιμή της μεταβλητής i στην μεταβλητή x και έπειτα αυξάνεται κατά ένα. Ενω αν
x = ++i; πρώτα θα αυξηθεί η τιμή της μεταβλητης i και μετα θα εκχωρηθεί η τιμή της στην x.

Οι τελεστές σύγκρισης χρησιμοποιούνται για να συγκρίνουν δύο εκφράσεις. Το αποτέλεσμα αυτης της σύγκρισης είναι αληθής(true) όταν η τιμή είναι διαφορετική απο το μηδέν
και ψευδής(false)  όταν η τιμή είναι μηδέν. Οι τελεστές αυτοί είναι ">, <, >=, <=, !=, ==", 
x > 5 (όπου η τιμή του x μεγαλύτερη του 5).
x < 5 (όπου η τιμή του x μικρότερη του 5).
x <= 5 (όπου η τιμή του  x μικρότερη ή ιση του 5).
x >= 5 (όπου η τιμή του x μεγαλύτερη ή ίση του 5).
x !=5 (όπου η τιμή του x διάφορετική του 5).
x == 5 (όπου η τιμή του x ίση με το 5).
 Ο τελεστής ! (not opperator)  είναι μοναδιαίος, εφαρμόζεται μόνο σε έναν τελεστέο.Π.χ αν μία έκφραση exp είναι αληθής τότε !exp είναι 0, δλδ το αντίθετο απο πρίν.

Οι λογικοί τελεστές είναι οι && που είναι το λογικο ΚΑΙ, || το λογικό Ή και 



 (4) Ποια απο τις παρακάτω εντολέςδιαβάζει εναν ακέραιο αριθμό και τον αποθηκεύει στην μεταβλητη i ;
A. scanf("%d", &i)
B. scan("%d", &i);
C. scanf("%f", &i);
D. scanf("%d", &i);

(5) Ποια απο τις παρακάτω εντολές δηλώνει έναν πραγματικό αριθμό;
A. float i
B. int i;
C. float i;
D. int i

(6) Ποια απο τις παρακάτω εντολές δηλώνει μια μεταβλητή ως σταθερα;
A. int x;
B. const int x;
C. const x = 5;
D. const int x = 5;

(7) Ποιές απο τις παρακάτω εντολές δηλώνει μια μακροεντολή;
A. define SIZE 100;
B. #define SIZE;
C. #define SIZE 100;
D. #define SIZE 100

(8) Ποιά είναι η έξοδος του παρακάτω προγράμματος; 
 #include <stdio.h>
int main () {
	printf("Hello\n");
	printf("World");
	return 0;
}
A. Hello
   World
B. Hello World
C. Hello	world
D. "Hello" "World"

(9)Ποια είναι η έξοδος του παρακάτω προγράμματος;
#inlude <stdio.h>
int main() {
	int x = 20, y = 10;
	printf("%d + %d = %d\n", x, y, x + y);
	return 0;
}

A. %d + %d = %d
B. x + y = x + y
C. 20 + 10 = 30
D. x + y = 30

(10) Ποια η έξοδος του παρακάτω προγράμματος;
#include <stdio.h>
int main() {
	float x = 1.2365;
	printf("Value = %f\n", x);
	printf("Value = %.2f\n", x);
	printf("Value = %.*f\n", 3, x);
	printf("Value = %.f\n", x);
	return 0;
}

A. Value = 1.236500 ( sosto)
   Value = 1.24
   Value = 1.237
   Value = 1

B. Value = 1.2365
   Value = 1.24
   Value = 1.23
   Value = 0.1

C. Value = 1.236500
   Value = 1.24
   Value = 1.23
   Value = 1

D. Value = 1.236500
   Value = 1.24
   Value = 1.237
   Value = 0.1
  
(11) Ποιός απο τους παρακάτω τελεστές χρησιμοποιείται για την εκχώρηση τιμής σε μία μεταβλητή;
A. ->
B. <-
C. =
D. ==

(12) Ποιό θα είναι το αποτέλεσμα της πράξης 3/2 αν και οι δύο αριθμοί είναι ακέραιοι;
A. 1.5
B. 1.0
C. 1
D. τίποτα απο τα παραπάνω

(13) Ποιά θα είναι η έξοδος του παρακάτω ρπογράμματος ;
#include <stdio.h>
int main() {
	int x = 5;
	x++;
	printf("%d\n", x);
	return 0;
}

A. 5
B. 6
C. 7
D. x++